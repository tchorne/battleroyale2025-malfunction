[gd_scene load_steps=4 format=3 uid="uid://3v6ml8x3x3b2"]

[ext_resource type="PackedScene" uid="uid://4twhou66q2pe" path="res://assets/custom/hand.blend" id="1_l7h22"]

[sub_resource type="Shader" id="Shader_h2fxm"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.3.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_toon, vertex_lighting;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	// Shading Mode: Per Vertex
	ROUGHNESS = roughness;

	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
}

void light(){
	if (dot(LIGHT, NORMAL) < 0.5) { SPECULAR_LIGHT = vec3(0.3);}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_w7wvb"]
render_priority = 0
shader = SubResource("Shader_h2fxm")
shader_parameter/albedo = Color(0.08, 0.08, 0.08, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[node name="hand" instance=ExtResource("1_l7h22")]

[node name="Cube" parent="." index="0"]
surface_material_override/0 = SubResource("ShaderMaterial_w7wvb")

[node name="Light" parent="." index="1"]
visible = false

[node name="Camera" parent="." index="2"]
visible = false

[node name="Camera_Orientation" parent="Camera" index="0"]
visible = false

[node name="Cube_001" parent="." index="3"]
surface_material_override/0 = SubResource("ShaderMaterial_w7wvb")
